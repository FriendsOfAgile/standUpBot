name: Develop
on:
  push:
    branches:
      - develop
jobs:
  symfony:
    name: Symfony 5.0 (PHP ${{ matrix.php-versions }} and Node ${{ matrix.node }})
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['7.4']
        node: ['10', '12', '13']
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Node (${{ matrix.node }})
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
        run: npm install

      - name: Build Vue App
        run: npm run build

      - name: Copy .env file
        run: cp .env.ci .env

      - name: Setup PHP, extensions and composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo
        env:
          update: true

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install

      - name: Deploy via SSH
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: "./.,!.env,!.git"
          target: /home/${{ secrets.USERNAME }}/web/${{ secrets.HOST }}/public_html/
          rm: true

      - name: Flush Database
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd /home/${{ secrets.USERNAME }}/web/${{ secrets.HOST }}/public_html/
            cp ../.env ./.env
            php bin/console doctrine:schema:update --force --quiet --no-interaction