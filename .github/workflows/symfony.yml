name: Full CI process for Symfony 5
on:
  push:
    branches:
      - master
      - develop
jobs:
  symfony:
    name: Symfony 5.0 (PHP ${{ matrix.php-versions }})
    runs-on: ubuntu-18.04
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      fail-fast: true
      matrix:
        php-versions: ['7.2', '7.4']
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP, extensions and composer with shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo
        env:
          update: true

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: make install

      - name: Check Symfony requirements
        run: vendor/bin/requirements-checker

      - name: Check the Symfony console
        run: |
          php bin/console -V
          php bin/console strangebuzz:version

      - name: Coding standards checks (php_codesniffer + PHPStan)
        run: make cs

#      - name: Load Doctrine fixtures and populate the Elasticsearch indexes
#        run: |
#          make load-fixtures
#          make populate
#
#      - name: Run functionnal and unit tests
#        run: |
#          cp phpunit.xml.ci phpunit.xml
#          make test